namespace CoreLayer.Citrix.Adc.NitroData.Api.Configuration.LoadBalancing
{
    public interface ILbvserverConfiguration 
    {
        string Name { get; set; }
        string ServiceType { get; set; }
        string IpV46 { get; set; } 
        string IpPattern { get; set; }
        string IpMask { get; set; }
        int? Port { get; set; }
        string Range { get; set; }
        string PersistenceType { get; set; }
        double? Timeout { get; set; }
        string PersistenceBackup { get; set; }
        double? BackupPersistenceTimeout { get; set; }
        string LbMethod { get; set; } 
        string HashLength { get; set; }
        string NetMask { get; set; }
        double? V6NetMaskLen { get; set; }
        string BackupLbMethod { get; set; }
        string CookieName { get; set; }
        string Rule { get; set; } 
        string ListenPolicy { get; set; }
        string ListenPriority { get; set; }
        string ResRule { get; set; } 
        string PersistMask { get; set; }
        string V6PersistMaskLen { get; set; }
        string Pq { get; set; } 
        string Sc { get; set; } 
        string RtspNat { get; set; } 
        string M { get; set; } 
        string TosId { get; set; }
        string DataLength { get; set; }
        string DataOffSet { get; set; }
        string Sessionless { get; set; }
        string TrofsPersistence { get; set; }
        string State { get; set; }
        string ConnFailover { get; set; } 
        string RedirUrl { get; set; } 
        string Cacheable { get; set; }
        string CltTimeout { get; set; } 
        string SoMethod { get; set; } 
        string SoPersistence { get; set; } 
        string SoPersistenceTimeout { get; set; } 
        string HealthThreshold { get; set; }
        string SoThreshold { get; set; } 
        string SoBackupAction { get; set; } 
        string RedirectPortRewrite { get; set; }
        string DownstateFlush { get; set; }
        string BackupVServer { get; set; } 
        string DisablePrimaryOnDown { get; set; }
        string InsertVServerIpPort { get; set; } 
        string VipHeader { get; set; }
        string AuthenticationHost { get; set; }
        string Authentication { get; set; }
        string Authn401 { get; set; } 
        string AuthnVsName { get; set; } 
        string Push { get; set; }
        string PushVServer { get; set; } 
        string PushLabel { get; set; } 
        string PushMultiClients { get; set; }
        string TcpProfileName { get; set; }
        string HttpProfileName { get; set; }
        string DbProfileName { get; set; }
        string Comment { get; set; }
        string L2Conn { get; set; } 
        string OracleServerVersion { get; set; }
        string MsSqlServerVersion { get; set; }
        string MySqlProtocolVersion { get; set; }
        string MySqlServerVersion { get; set; }
        string MySqlCharacterSet { get; set; }
        string MySqlServerCapabilities { get; set; }
        string AppFlowLog { get; set; } 
        string NetProfile { get; set; } 
        string IcmpVsrResponse { get; set; } 
        string RhiState { get; set; }
        string NewServiceRequest { get; set; }
        string NewServiceRequestUnit { get; set; }
        string NewServiceRequestIncrementInterval { get; set; }
        string MinAutoScaleMembers { get; set; }
        string MaxAutoScaleMembers { get; set; }
        string[] PersistAvpNo { get; set; } 
        string SkipPersistency { get; set; }
        string Td { get; set; } 
        string AuthnProfile { get; set; } 
        string MacModeRetainVlan { get; set; }
        string Dbslb { get; set; } 
        string Dns64 { get; set; }
        string BypassAaaa { get; set; }
        string RecursionAvailable { get; set; }
        string ProcessLocal { get; set; }
        string DnsProfileName { get; set; }
        string LbProfileName { get; set; } 
        int? RedirectFromPort { get; set; }
        string HttpsRedirectUrl { get; set; }
        string RetainConnectionsOnCluster { get; set; }
        string Weight { get; set; }
        string DynamicWeight { get; set; }
        string ServiceName { get; set; }
        bool? RedUrlFlags { get; set; }
        string Value { get; set; } 
        string IpMapping { get; set; }
        string NgName { get; set; } 
        string Type { get; set; }
        string CurState { get; set; } 
        string EffectiveState { get; set; }
        int? Status { get; set; }
        int? LbrrReason { get; set; } 
        string Redirect { get; set; } 
        string Precedence { get; set; }
        string HomePage { get; set; }
        string DnsVserverName { get; set; }
        string Domain { get; set; }
        string PolicyName { get; set; }
        string CacheVServer { get; set; }
        string Health { get; set; }
        string GoToPriorityExpression { get; set; }
        string RuleType { get; set; }
        string GroupName { get; set; }
        string CookieDomain { get; set; }
        string Map { get; set; }
        string Gt2Gb { get; set; } 
        string ConsolidatedLConn { get; set; } 
        string ConsolidatedLConnGbl { get; set; } 
        int? ThresholdValue { get; set; }
        string BindPoint { get; set; }
        bool? Invoke { get; set; }
        string LabelType { get; set; }
        string LabelName { get; set; }
        int? Version { get; set; } 
        string TotalServices { get; set; }
        string ActiveServices { get; set; }
        string StateChangeTimeSec { get; set; }
        string StateChangeTimeSeconds { get; set; }
        string StateChangeTimeMsec { get; set; }
        string TicksSinceLastStateChange { get; set; }
        bool? IsGslb { get; set; } 
        string VsvrDynConnSoThreshold { get; set; } 
        string BackupVserverStatus { get; set; }
        string CacheType { get; set; }
        string Hits { get; set; }
        string PiPolicyHits { get; set; }
        string PolicySubType { get; set; }
        string VsvrBindsvcIp { get; set; }
        int? VsvrBindsvcPort { get; set; }
        string NoDefaultBindings { get; set; }
        string Priority { get; set; }

        double? Count { get; set; } //[JsonPropertyName("__count")]
    }
}